{"version":3,"sources":["components/Switch.js","components/Popup.js","components/Shade.js","components/Shades.js","helpers.js","components/Converter.js","colors.js","components/InvalidColor.js","components/Palette.js","App.js","serviceWorker.js","index.js"],"names":["Switch","props","react_default","a","createElement","className","type","onClick","toggle","Float","styled","div","_templateObject","Popup","hex","Box","Shade_templateObject","bg","Shade","state","showPopup","copyToClipboard","e","el","document","rgb","_this","convertToRGB","value","copyHex","rgb2hex","setAttribute","style","position","left","body","appendChild","select","execCommand","removeChild","setState","setTimeout","_rgb$slice$split$map","slice","split","map","i","parseInt","toString","padStart","_rgb$slice$split$map2","Object","slicedToArray","r","g","b","concat","layer","source","convertToRGBAObj","rgba","Math","round","_rgba$slice$split","_rgba$slice$split2","this","components_Popup","React","Component","Container","Shades_templateObject","Shades","components_Shade","hex2rgba","_hex$match","match","_hex$match2","rr","gg","bb","aa","alpha","toFixed","checkValidHex","test","rgba2hex","parseFloat","_rgba$slice$split$map","_rgba$slice$split$map2","checkValidRGBA","_rgba$slice$split3","_rgba$slice$split4","_rgba$slice$split5","_rgba$slice$split6","inRange","n","upperLimit","checkDarkMode","_rgba$slice$split7","_rgba$slice$split8","Wrapper","section","Converter_templateObject","Input","input","_templateObject2","darkMode","HexInput","RGBAInput","Button","button","_templateObject3","Converter","showShades","isHexCopied","handleButtonClick","prevState","handleHexChange","target","handleRGBAChange","toggleCopyMode","src_components_Switch","components_Shades","onChange","maxLength","Colors","red","deeporange","orange","yellow","lightgreen","green","teal","cyan","lightblue","blue","indigo","deeppurple","purple","pink","brown","grey","bluegrey","InvalidColor_templateObject","Div","InvalidColor_templateObject2","InvalidColor_templateObject3","_templateObject4","InvalidColor","InvalidColor_Wrapper","color","InvalidColor_Container","keys","index","InvalidColor_Button","href","key","Palette_templateObject","Palette_templateObject2","PaletteItems","Palette_templateObject3","PaletteItem","Palette_templateObject4","Palette","colors","invalidColor","onClickItem","item","textContent","params","toLowerCase","_this2","components_InvalidColor","Palette_Wrapper","Palette_HexInput","Palette_RGBAInput","App","BrowserRouter","basename","Route","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f8719b87.chunk.js","sourcesContent":["import React from 'react';\nimport './Switch.css';\n\nconst Switch = (props) => {\n  return (\n    <label className=\"switch\">\n      <input type=\"checkbox\" onClick={props.toggle}/>\n      <span className=\"slider round\"></span>\n    </label>\n  )    \n}\n\nexport default Switch;","import React from 'react';\nimport styled from 'styled-components';\n\nconst Float = styled.div`\n  background: #ffffff55;\n  padding: 0 5px;\n  border-radius: 5px;\n  text-align: center;\n  display: flex;\n  align-items: center;\n  height: 100%;\n`;\n\nconst Popup = (props) => {\n  return (\n    <Float>\n      Copied {props.hex ? \"Hex Code\" : \"RGB Code\" }!\n    </Float>\n  )\n}\n\nexport default Popup;","import React from 'react';\nimport styled from 'styled-components';\nimport Popup from './Popup';\n\nconst Box = styled.div`\n  background: ${props => props.bg};\n  width: 100%;\n  height: 20%;\n\tz-index: 999;\n\tdisplay: flex;\n`;\n\nclass Shade extends React.Component {\n  state = {\n    showPopup: false\n  }\n\t\n\tcopyToClipboard = (e) => {\n\t\tconst el = document.createElement('textarea');\n\t\tconst rgb = this.convertToRGB(this.props.bg)\n\t\tel.value = this.props.copyHex ? this.rgb2hex(rgb) : rgb;\n\t\tel.setAttribute('readonly', '');\n\t\tel.style = {position: 'absolute', left: '-9999px'};\n\t\tdocument.body.appendChild(el);\n\t\tel.select();\n\t\tdocument.execCommand('copy');\n\t\tdocument.body.removeChild(el);\n\t\tthis.setState({ showPopup: true })\n\t\tsetTimeout(() => {this.setState({showPopup:false})}, 1000); \n\t}\n\n\trgb2hex = (rgb) => {\n\t\tconst [r, g, b] = rgb.slice(4,-1).split(',')\n\t\t\t\t\t\t\t\t\t\t\t\t\t.map(i => parseInt(i).toString(16).padStart(2, '0'))\n\t\treturn `#${r}${g}${b}`                      \n\t}\n\t\n\tconvertToRGB = (layer) => {\n\t\tconst source = this.convertToRGBAObj(layer)\n\t\tconst bg = this.convertToRGBAObj(this.props.rgba)\n\t\tconst r = Math.round(((1-source.a) * bg.r) + (source.a * source.r))\n\t\tconst g = Math.round(((1-source.a) * bg.g) + (source.a * source.g))\n\t\tconst b = Math.round(((1-source.a) * bg.b) + (source.a * source.b))\n\t\treturn `rgb(${r}, ${g}, ${b})`\n\t}\n\t\n\tconvertToRGBAObj = (rgba) => {\n\t\tconst [r, g, b, a] = rgba.slice(5,-1).split(',')\n\t\treturn {r:r, g:g, b:b, a:a}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Box bg={this.props.bg} onClick={this.copyToClipboard}>\n\t\t\t\t{this.state.showPopup ? (\n\t\t\t\t\t<Popup hex={this.props.copyHex} />\n\t\t\t\t ) : null }\n\t\t\t</Box>  \t\t\t  \n\t\t)\n\t}\n}\n  \nexport default Shade;","import React from 'react';\nimport styled from 'styled-components';\nimport Shade from './Shade';\n\nconst Container = styled.div`\n  background-color: transparent;\n  height: 100vh;\n  width: 10%;\n  position: absolute;\n  left: ${props => props.left}\n  top: 0;\n`;\n\nconst Shades = (props) => {\n  return (\n    <div>\n      <Container left={0}>\n        <Shade bg={'rgba(255,255,255,0.1)'} rgba={props.rgba} copyHex={props.copyHex} />\n        <Shade bg={'rgba(255,255,255,0.2)'} rgba={props.rgba} copyHex={props.copyHex} />\n        <Shade bg={'rgba(255,255,255,0.3)'} rgba={props.rgba} copyHex={props.copyHex} />\n        <Shade bg={'rgba(255,255,255,0.4)'} rgba={props.rgba} copyHex={props.copyHex} />\n        <Shade bg={'rgba(255,255,255,0.5)'} rgba={props.rgba} copyHex={props.copyHex} />\n      </Container>\n      <Container left={'90%'}>\n        <Shade bg={'rgba(0,0,0,0.1)'} rgba={props.rgba} copyHex={props.copyHex} />\n        <Shade bg={'rgba(0,0,0,0.2)'} rgba={props.rgba} copyHex={props.copyHex} />\n        <Shade bg={'rgba(0,0,0,0.3)'} rgba={props.rgba} copyHex={props.copyHex} />\n        <Shade bg={'rgba(0,0,0,0.4)'} rgba={props.rgba} copyHex={props.copyHex} />\n        <Shade bg={'rgba(0,0,0,0.5)'} rgba={props.rgba} copyHex={props.copyHex} />\n      </Container>\n    </div>\n  )\n}\n\nexport default Shades;","export const hex2rgba = (hex) => {\n  const [rr, gg, bb, aa] = hex.match(/\\w\\w/g)\n  const r = parseInt(rr, 16)\n  const g = parseInt(gg, 16)\n  const b = parseInt(bb, 16)\n  const alpha = aa ? (parseInt(aa, 16) / 255).toFixed(2) : 1.0\n  return `rgba(${r},${g},${b},${alpha})`\n};\n\nexport const checkValidHex = (hex) => {\n  const regex = /^#[a-fA-F0-9]{6}$/\n  const regex2 = /^#[a-fA-F0-9]{8}$/\n  return regex.test(hex) || regex2.test(hex)\n};\n\nexport const rgba2hex = (rgba) => {\n  if (rgba.slice(0,4) === \"rgba\") {\n    const [r, g, b, a] = rgba.slice(5,-1).split(',')\n    const rr = parseInt(r).toString(16).padStart(2, '0')\n    const gg = parseInt(g).toString(16).padStart(2, '0')\n    const bb = parseInt(b).toString(16).padStart(2, '0')\n    const aa = Math.round((parseFloat(a) * 255)).toString(16).padStart(2, '0')\n    return `#${rr}${gg}${bb}${aa}`\n  } else {\n      const [r, g, b] = rgba.slice(4,-1).split(',')\n                            .map(i => parseInt(i).toString(16).padStart(2, '0'))\n      return `#${r}${g}${b}`                      \n  }\n};\n\nexport const checkValidRGBA = (rgba) => {\n  let r = 0; \n  let g = 0; \n  let b = 0;\n  let a = 0;\n  if (rgba.slice(0,4) === \"rgba\") {\n    [r, g, b, a] = rgba.slice(5,-1).split(',')\n  } else {\n    [r, g, b] = rgba.slice(4,-1).split(',')\n    a = 1\n  }\n  return (\n    inRange(r, 255) && \n    inRange(g, 255) && \n    inRange(b, 255) &&\n    inRange(a, 1)\n  )\n};\n\nconst inRange = (n, upperLimit) => {\n  return parseInt(n) >= 0 && parseInt(n) <= upperLimit\n}\n\nexport const checkDarkMode = (rgba) => {\n  const [r, g, b, a] = rgba.slice(5,-1).split(',')\n  const val = parseInt(r) * 299 + parseInt(g) * 587 + parseInt(b) * 114 / 1000\n  return val < 123 ? true : false\n}","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport Switch from './Switch';\nimport Shades from './Shades';\nimport { hex2rgba, checkValidHex, rgba2hex, checkValidRGBA, checkDarkMode } from '../helpers';\n\nconst Wrapper = styled.section`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background: ${props => props.bg}\n`;\n\nconst Input = styled.input`\n  background-color: transparent;\n  color: ${props => props.darkMode ? \"white\" : \"black\"};\n  border-style: none;\n  border-bottom: ${props => props.darkMode ? \"white\" : \"black\"} solid 1px;\n  font-size: 20px;\n  text-align: center;\n  padding: 5px 20px;\n  margin: 10px;\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst HexInput = Input \nconst RGBAInput = Input\n\nconst Button = styled.button`\n  font-size: large;\n  background: transparent;\n  color: ${props => props.darkMode ? \"white\" : \"black\"};\n  padding: 10px;\n  border: 1px solid ${props => props.darkMode ? \"white\" : \"black\"};\n  border-radius: 5px;\n  position: absolute;\n  top: 5%;\n  &:hover {\n    background: ${props => props.darkMode ? \"white\" : \"black\"};\n    color: ${props => props.darkMode ? \"black\" : \"white\"};\n  }\n  &:focus {\n    outline: none;\n  }\n`;\n\nclass Converter extends Component {\n  state = {\n    hex: '#ff00ffff',\n    rgba: 'rgba(255,0,255,1.0)',\n    bg: '#ff00ffff',\n    showShades: true,\n    darkMode: false,\n    isHexCopied: true\n  }\n\n  handleButtonClick = (e) => {\n    this.setState(prevState => ({\n      showShades: !prevState.showShades\n    }))\n  }\n\n  handleHexChange = (e) => {\n    if (checkValidHex(e.target.value)) {\n      const rgba = hex2rgba(e.target.value)\n      this.setState({\n        bg: e.target.value,\n        rgba: rgba,\n        darkMode: checkDarkMode(rgba)\n      })\n    }     \n    this.setState({ hex: e.target.value })\n  }\n\n  handleRGBAChange = (e) => {\n    if (checkValidRGBA(e.target.value)) {\n      this.setState({\n        bg: e.target.value,\n        hex: rgba2hex(e.target.value),\n        darkMode: checkDarkMode(e.target.value)\n      })\n    }\n    this.setState({ rgba: e.target.value })\n  }\n\n  toggleCopyMode = (e) => {\n    this.setState(prevState => ({\n      isHexCopied: !prevState.isHexCopied\n    }))\n  }\n\n  render() {\n    return (\n      <Wrapper bg={this.state.bg}>\n        <Button\n          onClick={this.handleButtonClick}\n          darkMode={this.state.darkMode}\n        >Show Shades</Button>\n\n        <Switch toggle={this.toggleCopyMode}></Switch>\n\n        { this.state.showShades ? (\n          <Shades rgba={this.state.rgba} copyHex={this.state.isHexCopied}/>\n        ) : (<div></div>)}\n\n        <HexInput \n          type=\"text\" \n          onChange={this.handleHexChange}\n          value={this.state.hex}\n          maxLength={9}\n          darkMode={this.state.darkMode}\n        />\n        <RGBAInput \n          type=\"text\"\n          onChange={this.handleRGBAChange}\n          value={this.state.rgba}\n          darkMode={this.state.darkMode}\n        />\n      </Wrapper>\n    );\n  }\n}\n\nexport default Converter;\n","export const Colors = {\n  red: [\n    \"#FFCDD2\",\"#EF9A9A\",\"#E57373\",\"#EF5350\",\"#F44336\",\"#E53935\",\"#D32F2F\",\"#C62828\",\"#B71C1C\"\n  ],\n  deeporange: [\n    \"#FFCCBC\",\"#FFAB91\",\"#FF8A65\",\"#FF7043\",\"#FF5722\",\"#F4511E\",\"#E64A19\",\"#D84315\",\"#BF360C\"\n  ], \n  orange: [\n    \"#FFECB3\",\"#FFE082\",\"#FFD54F\",\"#FFCA28\",\"#FFC107\",\"#FFB300\",\"#FFA000\",\"#FF8F00\",\"#FF6F00\"\n  ],\n  yellow: [\n    \"#FFFDE7\",\"#FFF9C4\",\"#FFF59D\",\"#FFF176\",\"#FFEE58\",\"#FFEB3B\",\"#FDD835\",\"#FBC02D\",\"#F9A825\"\n  ],\n  lightgreen: [\n    \"#DCEDC8\",\"#C5E1A5\",\"#AED581\",\"#9CCC65\",\"#8BC34A\",\"#7CB342\",\"#689F38\",\"#558B2F\",\"#33691E\"\n  ],\n  green: [\n    \"#C8E6C9\",\"#A5D6A7\",\"#81C784\",\"#66BB6A\",\"#4CAF50\",\"#43A047\",\"#388E3C\",\"#2E7D32\",\"#1B5E20\"\n  ],\n  teal: [ \n    \"#B2DFDB\",\"#80CBC4\",\"#4DB6AC\",\"#26A69A\",\"#009688\",\"#00897B\",\"#00796B\",\"#00695C\",\"#004D40\"\n  ], \n  cyan: [\n    \"#B2EBF2\",\"#80DEEA\",\"#4DD0E1\",\"#26C6DA\",\"#00BCD4\",\"#00ACC1\",\"#0097A7\",\"#00838F\",\"#006064\"\n  ],\n  lightblue: [\n    \"#B3E5FC\",\"#81D4FA\",\"#4FC3F7\",\"#29B6F6\",\"#03A9F4\",\"#039BE5\",\"#0288D1\",\"#0277BD\",\"#01579B\"\n  ],\n  blue: [\n    \"#BBDEFB\",\"#90CAF9\",\"#64B5F6\",\"#42A5F5\",\"#2196F3\",\"#1E88E5\",\"#1976D2\",\"#1565C0\",\"#0D47A1\"\n  ],\n  indigo: [\n    \"#C5CAE9\",\"#9FA8DA\",\"#7986CB\",\"#5C6BC0\",\"#3F51B5\",\"#3949AB\",\"#303F9F\",\"#283593\",\"#1A237E\"\n  ],\n  deeppurple:[\n    \"#D1C4E9\",\"#B39DDB\",\"#9575CD\",\"#7E57C2\",\"#673AB7\",\"#5E35B1\",\"#512DA8\",\"#4527A0\",\"#311B92\"\n  ],\n  purple: [\n    \"#E1BEE7\",\"#CE93D8\",\"#BA68C8\",\"#AB47BC\",\"#9C27B0\",\"#8E24AA\",\"#7B1FA2\",\"#6A1B9A\",\"#4A148C\"\n  ], \n  pink: [\n    \"#F8BBD0\",\"#F48FB1\",\"#F06292\",\"#EC407A\",\"#E91E63\",\"#D81B60\",\"#C2185B\",\"#AD1457\",\"#880E4F\"\n  ],\n  brown: [\n    \"#D7CCC8\",\"#BCAAA4\",\"#A1887F\",\"#8D6E63\",\"#795548\",\"#6D4C41\",\"#5D4037\",\"#4E342E\",\"#3E2723\"\n  ],\n  grey: [\n    \"#F5F5F5\",\"#EEEEEE\",\"#E0E0E0\",\"#BDBDBD\",\"#9E9E9E\",\"#757575\",\"#616161\",\"#424242\",\"#212121\"\n  ],\n  bluegrey: [\n    \"#CFD8DC\",\"#B0BEC5\",\"#90A4AE\",\"#78909C\",\"#607D8B\",\"#546E7A\",\"#455A64\",\"#37474F\",\"#263238\"\n  ]\n\n}","import React from 'react';\nimport { Colors } from '../colors';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`\n\nconst Div = styled.div`\n  margin: 10px;\n`\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  width: 50%;\n  margin: 0 auto;\n  justify-content: center;\n`\n\nconst Button = styled.a`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: ${props => props.bg};\n  padding: 10px;\n  margin: 5px;\n  text-decoration: none;\n  color: white;\n`\n\nconst InvalidColor = (props) => {\n  return(\n    <Wrapper>\n      <Div>\n        The color {props.color} does not exist.\n      </Div>\n      <Div>\n        Perhaps you will be interested in these instead? \n      </Div>\n      <Container>\n        {Object.keys(Colors).map((color, index) => {\n          return(\n            <Button bg={Colors[color][4]} href={color} key={index}>\n              {color}\n            </Button>\n          )\n        })}\n      </Container>\n    </Wrapper>\n  )\n}\n\nexport default InvalidColor;","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { Colors } from '../colors';\nimport { hex2rgba, checkValidHex, rgba2hex, checkValidRGBA, checkDarkMode } from '../helpers';\nimport InvalidColor from './InvalidColor';\n\nconst Wrapper = styled.section`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background: ${props => props.bg}\n`;\n\nconst Input = styled.input`\n  background-color: transparent;\n  color: ${props => props.darkMode ? \"white\" : \"black\"};\n  border-style: none;\n  border-bottom: ${props => props.darkMode ? \"white\" : \"black\"} solid 1px;\n  font-size: 20px;\n  text-align: center;\n  padding: 5px 20px;\n  margin: 10px;\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst HexInput = Input \nconst RGBAInput = Input\n\nconst PaletteItems = styled.div`\n  position: absolute;\n  bottom: 0;\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n`;\n\nconst PaletteItem = styled.div`\n  flex: 1;\n  height: 10vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: ${props => props.bg};\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nclass Palette extends Component {\n  state = {\n    hex: '#ffffffff',\n    rgba: 'rgba(255,255,255,1.0)',\n    bg: '#ffffffff',\n    darkMode: false,\n    colors: [],\n    invalidColor: false,\n    color: ''\n  }\n  \n  componentDidMount(){\n    const color = this.props.match.params.color.toLowerCase()\n    this.setState({ color })\n    const colors = Colors[color]\n    if (colors == null) {\n      this.setState({ invalidColor: true })\n    } else {\n      this.setState({ \n        colors: colors,\n        hex: colors[4],\n        rgba: hex2rgba(colors[4]),\n        bg: colors[4]\n      })\n    }\n    \n  }\n\n  handleHexChange = (e) => {\n    if (checkValidHex(e.target.value)) {\n      const rgba = hex2rgba(e.target.value)\n      this.setState({\n        bg: e.target.value,\n        rgba: rgba,\n        darkMode: checkDarkMode(rgba)\n      })\n    }     \n    this.setState({ hex: e.target.value })\n  }\n\n  handleRGBAChange = (e) => {\n    if (checkValidRGBA(e.target.value)) {\n      this.setState({\n        bg: e.target.value,\n        hex: rgba2hex(e.target.value),\n        darkMode:checkDarkMode(e.target.value)\n      })\n    }\n    this.setState({ rgba: e.target.value })\n  }\n\n  onClickItem = item => {\n    this.setState({ \n      hex: item.target.textContent,\n      bg: item.target.textContent,\n      rgba: hex2rgba(item.target.textContent)\n    })\n  }\n\n  render(){\n    return (\n      <div>\n      {this.state.invalidColor ? (\n        <InvalidColor color={this.state.color} />\n      ) : (\n        <Wrapper bg={this.state.bg}>\n        <HexInput \n          type=\"text\" \n          onChange={this.handleHexChange}\n          value={this.state.hex}\n          maxLength={9}\n          darkMode={this.state.darkMode}\n        />\n        <RGBAInput \n          type=\"text\"\n          onChange={this.handleRGBAChange}\n          value={this.state.rgba}\n          darkMode={this.state.darkMode}\n        />\n\n        <PaletteItems>\n          {this.state.colors.map((item, index) => {\n            return(\n              <PaletteItem \n                bg={item} \n                key={index} \n                onClick={this.onClickItem}>\n                {item}\n              </PaletteItem>\n            )\n          })}\n        </PaletteItems>\n        </Wrapper>\n      )}\n      </div>  \n    )\n  }  \n}\n\nexport default Palette;","import React, { Component } from 'react';\nimport Converter from './components/Converter';\nimport Palette from './components/Palette';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router basename=\"/hex-to-rgba\">\n        <div>\n          <Route path=\"/\" exact component={Converter} />\n          <Route path=\"/:color/\" component={Palette} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}